
色情图片识别


参考博文：https://blog.csdn.net/u011473714/article/details/52343758

1.知识点：
    a.pillow 模块
    b.argparse 模块
    c.肤色像素检测与皮肤区域划分算法

2.原理
    本程序根据颜色找出图片中的皮肤区域，然后通过一些条件判断是否为色情图片

    程序步骤如下：
    1.遍历色素，检测色素是否为肤色
    2.将相邻的肤色归为一个皮肤区域，得到若干皮肤区域
    3.剔除像素数量极少的皮肤区域

    非色情图片判定规则：
    1.皮肤区域少于三
    2.皮肤区域站图像像素的比例值小于15%
    3.最大皮肤区域小于总皮肤区域的45%
    4.皮肤区域数量超过60

    像素肤色判定公式：
    RGB 颜色模式
        第一种：r > 95 and g > 40 and g < 100 and b > 20 and max([r, g, b]) - min([r, g, b]) > 15 and abs(r - g) > 15 and r > g and r > b

        第二种：nr = r / (r + g + b), ng = g / (r + g + b), nb = b / (r +g + b), nr / ng > 1.185 and r * b / (r + g + b) ** 2 > 0.107 and r * g / (r + g + b) ** 2 > 0.112

    HSV 颜色模式
        h > 0 and h < 35 and s > 0.23 and s < 0.68

    YCbCr 颜色模式
        97.5 <= cb <= 142.5 and 134 <= cr <= 176

3.数据信息
    一副图画包含多个皮肤区域，这些皮肤区域带有的数据信息需要被记录：
    class Skin{
        'id': number, default = 0
        'skin': bool, default = False
        'region': field, default = None
        'point': x,y    default = (0, 0)
    }

    相邻像素的定义：通常都能想到是当前像素周围的 8 个像素，然而实际上只需要定义 4 个就可以了，
    位置分别在当前像素的左方，左上方，正上方，右上方；
    因为另外四个像素都在当前像素后面，我们还未给这4个像素创建对应的 Skin 对象


4. collections ===== Container datatypes  容器数据类型

    4.1 way and explain

    namedtuple()       工厂函数用来创建命名字段元组子类
    deque              类似列表的容器，可以再两端快速添加和弹出
    ChainMap           字典类，用来创建多映射单一视图
    Counter            字典子类，用来计数 hashable 对象
    OrderedDict        字典子类，记录 order 添加的条目
    defaultdict        字典子类，call 工厂函数提供缺省值
    UserDict           围绕字典对象的包装器，用于更容易的命令子类化。
    UserList           围绕列表对象的包装器，用于更容易的命令子类化。
    UserString         围绕字符对象的包装器，用于更容易的命令子类化。

